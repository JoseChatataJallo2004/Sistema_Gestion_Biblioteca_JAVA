package gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import entidad.Libro;
import entidad.Tesis;
import model.TesisModel;
import util.JComboBoxBD;

public class FrmConsultaTesis extends JInternalFrame {

	private static final long serialVersionUID = 1L;
	private JLabel lblConsultaDeLibro;
	private JLabel lblAlumno;
	private JComboBoxBD cboAlumno;
	private JScrollPane scrollPane;
	private JTable table;
	private ResourceBundle rb=ResourceBundle.getBundle("combo");
	public FrmConsultaTesis() {
		setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		setMaximizable(true);
		setIconifiable(true);
		setClosable(true);
		setTitle("Consulta Tesis");
		setBounds(100, 100, 1000, 600);
		getContentPane().setLayout(null);
		
		lblConsultaDeLibro = new JLabel("Consulta de Libro");
		lblConsultaDeLibro.setHorizontalAlignment(SwingConstants.CENTER);
		lblConsultaDeLibro.setFont(new Font("Tahoma", Font.BOLD, 18));
		lblConsultaDeLibro.setBounds(188, 25, 572, 36);
		getContentPane().add(lblConsultaDeLibro);
		
		lblAlumno = new JLabel("Alumno");
		lblAlumno.setBounds(98, 103, 113, 14);
		getContentPane().add(lblAlumno);
		
		cboAlumno = new JComboBoxBD(rb.getString("SQL_ALUMNO"),"[ Todos ]");
		cboAlumno.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent e) {
				itemStateChangedCboAlumno(e);
			}
		});
		cboAlumno.setBounds(228, 99, 413, 22);
		getContentPane().add(cboAlumno);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 162, 964, 380);
		getContentPane().add(scrollPane);
		
		table = new JTable();
		table.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Codigo", "Titulo", "Tema", "Fecha Creacion", "Fecha Registro", "Estado", "Alumno"
			}
		));
		//Tamaño a las columnas

		table.getColumnModel().getColumn(0).setPreferredWidth(30);

		table.getColumnModel().getColumn(1).setPreferredWidth(300);

		table.getColumnModel().getColumn(2).setPreferredWidth(130);

		table.getColumnModel().getColumn(3).setPreferredWidth(150);

		table.getColumnModel().getColumn(4).setPreferredWidth(200);

		table.getColumnModel().getColumn(5).setPreferredWidth(50);
		
		table.getColumnModel().getColumn(5).setPreferredWidth(150);

		scrollPane.setViewportView(table);

		

		//desabilita mover las columnas

		table.getTableHeader().setReorderingAllowed(false);

		

		//desabilita el cambio de tamaño

		table.getTableHeader().setResizingAllowed(false);

		 

		//selecciona una sola fila

		table.setRowSelectionAllowed(false);

		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

				

		//Desabilitar la edicion en las celdas

		table.setDefaultEditor(Object.class, null);

		

		//Colores alternados de la fila

		UIDefaults defaults = UIManager.getLookAndFeelDefaults();

		defaults.putIfAbsent("Table.alternateRowColor", new Color(176, 245, 215));

		

		//Alineación

		DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();

		rightRenderer.setHorizontalAlignment(JLabel.CENTER);

		

		table.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);

		table.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);

		table.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);

		table.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
		scrollPane.setViewportView(table);
	}

	public void mensaje(String ms) {
		JOptionPane.showMessageDialog(this, ms);
	}
	protected void itemStateChangedCboAlumno(ItemEvent e) {
		if (e.getStateChange() == ItemEvent.SELECTED) {
			int index = cboAlumno.getSelectedIndex();
			String item = cboAlumno.getSelectedItem().toString();		
			System.out.println("Index >>> " + index);
			System.out.println("Item >>> " + item);		
			
			TesisModel model=new TesisModel();
			List<Tesis> lst=null;
			if(index==0) {
				lst=new ArrayList<Tesis>();
			}else if (index==1) {
				lst=model.listaTodos();
			}else {
				String[]separados=item.split(":");
				int idAlumno=Integer.parseInt(separados[0]);
				lst=model.listaAlumno(idAlumno);
			}
			DefaultTableModel dtm=(DefaultTableModel)table.getModel();
			dtm.setRowCount(0);
			for (Tesis x : lst) {
				Object[] f= {x.getIdtesis(),
						x.getTitulo(),
						x.getTema(),
						x.getFechaCreacion(),
						x.getFechaRegistro(),
						x.getEstado()==1?"Activo":"Inactivo",
						x.getAlumno().getNombres()
							};
				dtm.addRow(f);
			}
		}
	}
}
